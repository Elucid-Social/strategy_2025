import{_ as t,c as i,o,ae as r}from"./chunks/framework.BHrE6nLq.js";const h=JSON.parse('{"title":"PrimeVue Integration Notes","description":"","frontmatter":{},"headers":[],"relativePath":"PRIMEVUE_INTEGRATION.md","filePath":"PRIMEVUE_INTEGRATION.md"}'),n={name:"PRIMEVUE_INTEGRATION.md"};function a(s,e,l,u,m,p){return o(),i("div",null,e[0]||(e[0]=[r('<h1 id="primevue-integration-notes" tabindex="-1">PrimeVue Integration Notes <a class="header-anchor" href="#primevue-integration-notes" aria-label="Permalink to &quot;PrimeVue Integration Notes&quot;">​</a></h1><h2 id="current-status" tabindex="-1">Current Status <a class="header-anchor" href="#current-status" aria-label="Permalink to &quot;Current Status&quot;">​</a></h2><p>We&#39;ve implemented custom Vue components that mimic the PrimeVue components to fix build issues related to ES modules. The original error was:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Warning: To load an ES module, set &quot;type&quot;: &quot;module&quot; in the package.json or use the .mjs extension.</span></span></code></pre></div><h2 id="the-issue" tabindex="-1">The Issue <a class="header-anchor" href="#the-issue" aria-label="Permalink to &quot;The Issue&quot;">​</a></h2><p>Despite having <code>&quot;type&quot;: &quot;module&quot;</code> set in package.json, PrimeVue&#39;s internal imports were causing conflicts between ES modules and CommonJS modules. Specifically, files like:</p><ul><li>primevue/config/config.esm.js</li><li>primevue/button/button.esm.js</li></ul><p>were using ES module syntax (<code>import</code> statements) but were being loaded as CommonJS modules.</p><h2 id="current-solution" tabindex="-1">Current Solution <a class="header-anchor" href="#current-solution" aria-label="Permalink to &quot;Current Solution&quot;">​</a></h2><p>We&#39;ve implemented custom Vue components that mimic the basic functionality of the PrimeVue components we were using:</p><ol><li><p><strong>Custom Components</strong>: Created simplified versions of:</p><ul><li>PCard</li><li>PDataTable</li><li>PColumn</li></ul></li><li><p><strong>Location</strong>: These components are in <code>/docs/.vitepress/theme/components/</code></p></li><li><p><strong>Registration</strong>: Components are registered in <code>/docs/.vitepress/theme/index.mjs</code></p></li><li><p><strong>Styling</strong>: Basic styling is provided in <code>/docs/.vitepress/theme/custom.css</code></p></li></ol><p>This approach allows us to keep using the same component names and structure in our Markdown files without having to modify them.</p><h2 id="future-primevue-reintegration" tabindex="-1">Future PrimeVue Reintegration <a class="header-anchor" href="#future-primevue-reintegration" aria-label="Permalink to &quot;Future PrimeVue Reintegration&quot;">​</a></h2><p>There are several approaches to reintegrate the full PrimeVue library in the future:</p><ol><li><p><strong>Use Vite Plugin for PrimeVue</strong>: Create a Vite plugin that properly handles PrimeVue&#39;s module system.</p></li><li><p><strong>Use PrimeVue with Vue 3 in Vite</strong>: Follow the official PrimeVue documentation for Vite integration.</p></li><li><p><strong>Use ESBuild to Bundle PrimeVue</strong>: Create a custom bundle of PrimeVue components using ESBuild that resolves the module issues.</p></li><li><p><strong>Upgrade PrimeVue</strong>: Check if newer versions of PrimeVue have better ES module support.</p></li></ol><h2 id="implementation-steps-for-full-reintegration" tabindex="-1">Implementation Steps for Full Reintegration <a class="header-anchor" href="#implementation-steps-for-full-reintegration" aria-label="Permalink to &quot;Implementation Steps for Full Reintegration&quot;">​</a></h2><p>When ready to reintegrate the full PrimeVue library:</p><ol><li>Create a custom entry point for PrimeVue that uses dynamic imports or properly handles the module system</li><li>Update the theme&#39;s index.mjs to use this custom entry point</li><li>Remove the custom component implementations</li><li>Test the build process thoroughly</li></ol><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://primevue.org/installation" target="_blank" rel="noreferrer">PrimeVue Documentation</a></li><li><a href="https://vitejs.dev/guide/dep-pre-bundling.html#the-why" target="_blank" rel="noreferrer">Vite ESM/CJS Interoperability</a></li><li><a href="https://nodejs.org/api/esm.html" target="_blank" rel="noreferrer">Node.js ES Modules</a></li></ul>',20)]))}const c=t(n,[["render",a]]);export{h as __pageData,c as default};
